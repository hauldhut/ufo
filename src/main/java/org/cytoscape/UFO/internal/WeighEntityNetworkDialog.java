
package org.cytoscape.UFO.internal;

import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.cytoscape.UFO.Base.Interaction;
import org.cytoscape.application.swing.CytoPanelComponent;
import org.cytoscape.application.swing.CytoPanelName;
import org.cytoscape.io.read.CyNetworkReaderManager;
import org.cytoscape.model.CyEdge;
import org.cytoscape.model.CyNetwork;
import org.cytoscape.model.CyNetworkFactory;
import org.cytoscape.model.CyNetworkManager;
import org.cytoscape.model.CyRow;
import org.cytoscape.model.CyTableUtil;
import org.cytoscape.session.CyNetworkNaming;
import org.cytoscape.view.layout.CyLayoutAlgorithm;
import org.cytoscape.view.layout.CyLayoutAlgorithmManager;
import org.cytoscape.view.model.CyNetworkView;
import org.cytoscape.view.model.CyNetworkViewFactory;
import org.cytoscape.view.model.CyNetworkViewManager;
import org.cytoscape.view.presentation.property.BasicVisualLexicon;
import org.cytoscape.view.presentation.property.NodeShapeVisualProperty;
import org.cytoscape.view.vizmap.VisualMappingFunctionFactory;
import org.cytoscape.view.vizmap.VisualMappingManager;
import org.cytoscape.view.vizmap.VisualStyle;
import org.cytoscape.view.vizmap.VisualStyleFactory;
import org.cytoscape.work.AbstractTaskFactory;
import org.cytoscape.work.FinishStatus;
import org.cytoscape.work.ObservableTask;
import org.cytoscape.work.SynchronousTaskManager;
import org.cytoscape.work.TaskIterator;
import org.cytoscape.work.TaskManager;
import org.cytoscape.work.TaskObserver;


/**
 *
 * @author SUPB
 */
public class WeighEntityNetworkDialog extends javax.swing.JDialog {
    public static String SubOntology;
    public static String Root;
    public static int Species_TaxonID=9606;
    public static String Corpus="UniProtKB";
    public static String GeneIdentifier="EntrezID";
    public static boolean IgnoreIEA=true;
    private TaskManager taskManager;
    private List<CyEdge> arrCyEdge;
    private CyNetworkManager cyNetworkManager;
    public static String FSM ="";
    
    private TaskManager cyTaskManager;
    
    private CyNetworkReaderManager cyNetworkReaderManager;
    private CyNetworkFactory cyNetworkFactory;
    private CyNetworkNaming namingUtil;
    private SynchronousTaskManager cySynchronousTaskManager; 
    private CyNetworkViewManager cyNetworkViewManager;
    private CyNetworkViewFactory cyNetworkViewFactory;

    public WeighEntityNetworkDialog(java.awt.Frame parent, boolean modal, 
            TaskManager taskManagerServiceRef, CyNetworkManager cyNetworkManagerServiceRef) {
        super(parent, modal);
        initComponents();
        this.taskManager = taskManagerServiceRef;
        this.cyNetworkManager = cyNetworkManagerServiceRef;
                
    }

    public WeighEntityNetworkDialog() {
        super();
        initComponents();
//        this.setBounds(0, 0, 548, 213);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgInteraction = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        pnlEntityNet = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cboNetwork = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        cboInteraction = new javax.swing.JComboBox();
        btnOK = new javax.swing.JButton();
        btnLoadNetworkList = new javax.swing.JButton();
        btnExportWeightedInteraction = new javax.swing.JButton();
        chkObjectInteractionNameView = new javax.swing.JCheckBox();
        jScrollPane17 = new javax.swing.JScrollPane();
        tblWeightedInteraction = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pre-compute Data");

        jLabel3.setText("Network");

        cboNetwork.setToolTipText("Load and Select an Interaction Network of Objects");
        cboNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNetworkActionPerformed(evt);
            }
        });

        jLabel8.setText("Interaction");

        cboInteraction.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selected Interactions", "All network Interactions" }));

        btnOK.setText("Weigh");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnLoadNetworkList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Refresh.jpg"))); // NOI18N
        btnLoadNetworkList.setToolTipText("Load Object Interaction Network List");
        btnLoadNetworkList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadNetworkListActionPerformed(evt);
            }
        });

        btnExportWeightedInteraction.setText("Export...");
        btnExportWeightedInteraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportWeightedInteractionActionPerformed(evt);
            }
        });

        chkObjectInteractionNameView.setText("Name View");
        chkObjectInteractionNameView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkObjectInteractionNameViewActionPerformed(evt);
            }
        });

        tblWeightedInteraction.setAutoCreateRowSorter(true);
        tblWeightedInteraction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Entity1 ID", "Weight", "Entity2 ID", "Note"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblWeightedInteraction.setToolTipText("");
        tblWeightedInteraction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblWeightedInteractionMouseClicked(evt);
            }
        });
        jScrollPane17.setViewportView(tblWeightedInteraction);

        javax.swing.GroupLayout pnlEntityNetLayout = new javax.swing.GroupLayout(pnlEntityNet);
        pnlEntityNet.setLayout(pnlEntityNetLayout);
        pnlEntityNetLayout.setHorizontalGroup(
            pnlEntityNetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEntityNetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEntityNetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                    .addGroup(pnlEntityNetLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(cboNetwork, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLoadNetworkList, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEntityNetLayout.createSequentialGroup()
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkObjectInteractionNameView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExportWeightedInteraction))
                    .addGroup(pnlEntityNetLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboInteraction, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlEntityNetLayout.setVerticalGroup(
            pnlEntityNetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEntityNetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEntityNetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLoadNetworkList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlEntityNetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(cboNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEntityNetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cboInteraction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEntityNetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnExportWeightedInteraction)
                    .addComponent(chkObjectInteractionNameView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(491, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlEntityNet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(377, 377, 377)
                .addComponent(jLabel1)
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(pnlEntityNet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getAccessibleContext().setAccessibleName("Weigh Entity Network");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNetworkActionPerformed
        if (cboNetwork.getItemCount() > 0) {
            String selNetID = cboNetwork.getSelectedItem().toString();
            System.out.println("selNetID: " + selNetID);
            CyNetwork selNet = null;
            for (CyNetwork cyNetwork : cyNetworkManager.getNetworkSet()) {
                if (cyNetwork.getDefaultNetworkTable().getAllRows().get(0).getRaw("name").toString().equals(selNetID)) {
                    selNet = cyNetwork;
                }
            }
            final Collection<CyNetworkView> views = cyNetworkViewManager.getNetworkViews(selNet);
            CyNetworkView selNetView = null;
            if (views.size() != 0) {
                selNetView = views.iterator().next();
            }
            if (selNetView == null) {
                // create a new view for my network
                selNetView = cyNetworkViewFactory.createNetworkView(selNet);
                cyNetworkViewManager.addNetworkView(selNetView);

            } else {
                System.out.println("networkView already existed.");
            }

            //Cytoscape.setCurrentNetworkView(selNetID);
            //            List<String> selNetIDList = new ArrayList<String>();
            //            selNetIDList.add(selNetID);
            //            Cytoscape.setSelectedNetworkViews(selNetIDList);
            //
        }
    }//GEN-LAST:event_cboNetworkActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        chkObjectInteractionNameView.setSelected(false);

        if (cboNetwork.getItemCount() == 0) {
            Vector<String> ColHeader = new Vector<String>();
            ColHeader.add("Object1 ID");
            ColHeader.add("Weight");
            ColHeader.add("Object2 ID");
            ColHeader.add("Note");

            Vector<Vector> Data = new Vector<Vector>();
            tblWeightedInteraction.setModel(new javax.swing.table.DefaultTableModel(Data, ColHeader) {
            });

            JOptionPane.showMessageDialog(this.getRootPane(), "Please select a network! \n(Click Refresh button to load Interaction Networks!)", "Notice", JOptionPane.ERROR_MESSAGE);

            return;

        }
        if (cboInteraction.getSelectedIndex() == 0) {
            //            CyNetwork selNet = Cytoscape.getNetwork(cboNetwork.getSelectedItem().toString());
            CyNetwork selNet = null;
            for (CyNetwork cyNetwork : cyNetworkManager.getNetworkSet()) {
                if (cyNetwork.getDefaultNetworkTable().getRow(cyNetwork.getSUID()).getRaw("name").toString().equals(cboNetwork.getSelectedItem().toString())) {
                    selNet = cyNetwork;
                }
            }
            //            arrCyEdge = new ArrayList<CyEdge>();
            arrCyEdge = CyTableUtil.getEdgesInState(selNet, "selected", true);
            //            for (CyRow cyRow : selNet.getDefaultEdgeTable().getAllRows()) {
                //                if (cyRow.getRaw("selected").toString().equals("true")) {
                    //                    arrCyEdge.add(selNet.getEdge((Long) cyRow.getRaw("SUID")));
                    //                }
                //            }
            System.out.println("arrCyEdge = " + arrCyEdge);
            if (null == arrCyEdge || arrCyEdge.size() == 0) {
                JOptionPane.showMessageDialog(this.getRootPane(), "Select at least one interaction!", "Notice", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        //Weight Interaction Network
        WeightInteractionNetworkTaskFactory weightInteractionNetworkTaskFactory = new WeightInteractionNetworkTaskFactory();
        this.taskManager.execute(weightInteractionNetworkTaskFactory.createTaskIterator());
        JOptionPane.showMessageDialog(this.getRootPane(), "Done!");
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnLoadNetworkListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadNetworkListActionPerformed
        cboNetwork.removeAllItems();

        Set<CyNetwork> NetworkSet = cyNetworkManager.getNetworkSet();
        for (CyNetwork net : NetworkSet) {
            String NetID = net.getRow(net).getRaw("name").toString();//getIdentifier();
            String NetTitle = net.getRow(net).getRaw("name").toString();//getTitle();
            String NetType = null;
            if (null != net.getRow(net).getRaw("Type")) {
                NetType = net.getRow(net).getRaw("Type").toString();
            }
            System.out.println(NetID + "\t" + NetTitle);

            if ((NetType != null && NetType.isEmpty()) || NetType == null) {
                //cboNetwork.addItem(NetTitle + " (" + NetID + ")");
                cboNetwork.addItem(NetID);
            }
        }
    }//GEN-LAST:event_btnLoadNetworkListActionPerformed

    private void btnExportWeightedInteractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportWeightedInteractionActionPerformed
        JFileChooser fc = new JFileChooser();
        //fc.setFileFilter(new FileTypeFilter());
        fc.setDialogTitle("Save Weighted Network");
        fc.setCurrentDirectory(new File("."));

        int returnVal = fc.showSaveDialog(this.getRootPane());
        //int returnVal=fc.showSaveDialog(this);
        String fileName = "";
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            fileName = fc.getSelectedFile().getAbsolutePath();
            //JOptionPane.showMessageDialog(Cytoscape.getDesktop(),"You chose to open this file: " + fc.getSelectedFile().getName());
        } else {
            return;
        }
        try {
            PrintWriter output = new PrintWriter(new FileOutputStream(fileName), true); //auto flush
            int i, j;
            output.println("Object1 ID\tWeight\tObject2 ID\tNote");

            for (i = 0; i < tblWeightedInteraction.getRowCount(); i++) {
                output.print(((tblWeightedInteraction.getValueAt(i, 0) != null) ? tblWeightedInteraction.getValueAt(i, 0).toString() : ""));
                for (j = 1; j < tblWeightedInteraction.getColumnCount(); j++) {
                    output.print("\t" + ((tblWeightedInteraction.getValueAt(i, j) != null) ? tblWeightedInteraction.getValueAt(i, j).toString() : ""));
                }
                output.println();
            }

            output.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this.getRootPane(), "Error while exporting Weighted Interactions: " + e.toString());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnExportWeightedInteractionActionPerformed

    private void chkObjectInteractionNameViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkObjectInteractionNameViewActionPerformed
        if (WeighEntityNetworkTask.WeightedInteractionList == null || WeighEntityNetworkTask.WeightedInteractionList.size() == 0) {
            return;
        }
        ArrayList<Interaction> WeightedInteractionNameList = new ArrayList<Interaction>();
        int i;
        for (i = 0; i < WeighEntityNetworkTask.WeightedInteractionList.size(); i++) {
            Interaction ina = WeighEntityNetworkTask.WeightedInteractionList.get(i);
            Interaction inaname = new Interaction();
            inaname.NodeSrc = BasicData.ObjectID2NameMap.get(ina.NodeSrc);
            inaname.NodeDst = BasicData.ObjectID2NameMap.get(ina.NodeDst);
            inaname.Weight = ina.Weight;
            inaname.Index = ina.Index;
            WeightedInteractionNameList.add(inaname);
        }
        if (chkObjectInteractionNameView.isSelected()) {
            MainPanel.fillWeightedInteractionTable(WeightedInteractionNameList, tblWeightedInteraction);
        } else {
            MainPanel.fillWeightedInteractionTable(WeighEntityNetworkTask.WeightedInteractionList, tblWeightedInteraction);
        }
    }//GEN-LAST:event_chkObjectInteractionNameViewActionPerformed

    private void tblWeightedInteractionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblWeightedInteractionMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblWeightedInteractionMouseClicked
    
    private class UseCurrentNetworkTaskFactory extends AbstractTaskFactory {
        
        @Override
        public TaskIterator createTaskIterator() {
            return new TaskIterator(new UseCurrentNetworkTask());

        }
    }
    
    private class WeightInteractionNetworkTaskFactory extends AbstractTaskFactory {
        
        @Override
        public TaskIterator createTaskIterator() {
            return new TaskIterator(new WeighEntityNetworkTask(cyNetworkManager, arrCyEdge));

        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgInteraction;
    private javax.swing.JButton btnExportWeightedInteraction;
    private javax.swing.JButton btnLoadNetworkList;
    private javax.swing.JButton btnOK;
    public static javax.swing.JComboBox cboInteraction;
    public static javax.swing.JComboBox cboNetwork;
    private javax.swing.JCheckBox chkObjectInteractionNameView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JPanel pnlEntityNet;
    public static javax.swing.JTable tblWeightedInteraction;
    // End of variables declaration//GEN-END:variables

}
